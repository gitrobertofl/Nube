package repositorio; 

import java.util.Scanner;
//import java.util.Vector;
import java.io.*;
/********************************************************************************
 * Esta clase va a implementar el interface del entorno de usuario en modo 
 * consola. 
 * Contiene los m�todos para la visualizaci�n de cada men�
 * 
 * Con licencia GPL v3
 * @see RegistroRMI
 * @author Roberto J. de la Fuente Lopez 
 *         rfuente4@alumno.uned.es
 *         robertofl@aconute.es
 * @version 20201103
 *********************************************************************************/
public class GUIRepositorioTexto extends GUIUsuarioTexto
  {
  private final Character ALTA_Repositorio='1';
  //private final Character AUTENTIFICAR_Repositorio='2';
      
      
      
  /**
    * Constructor por defecto. no hace nada
   */
  public GUIRepositorioTexto()
    {
    
    }
  public GUIRepositorioTexto(String tipo)
    {
    super(tipo);
    }
    
    
   
  /**
   * Se visualiza el menu del repositorio una vez acreditado.
   * 
   * @param obtiene el ID del repostitorio
   * @return devuelve el primer caracter pulsado con numero que se pulsa (u otra cosa)
   * o 'n' si intro
   */ 
  public Character menuUsuarioAcreditado(String IDUsuario)
    {
    Scanner teclado=new Scanner(System.in);
    Character tecla='0'; //captura la primera tecla pulsada
    String cadenaEntrada="";//para capturar la entrada
    //l�mites de opcion
    char opcionInicial='1';
    char opcionFinal='3';
    limpiarPantalla();   
    System.out.println("        ALMCENAMIENTO EN LA NUBE");
    System.out.println("         "+tipoUsuario+" : "+IDUsuario);
    System.out.println();
    System.out.println(" 1 - Listar clientes");
    System.out.println(" 2 - Listar ficheros del cliente");
    System.out.println(" 3 - Salir");
    System.out.println("");
    System.out.println("Pulsar una opcion y despues intro. Si es erronea volvera a este menu");
    System.out.print("opcion elegida : ");
    cadenaEntrada=teclado.nextLine();
    //si solo se pulsa intro, la cadena esta vacia, por lo que hay que volver a imprimir
    if ((cadenaEntrada.length()==0) ||
           ((cadenaEntrada.charAt(0)<opcionInicial)&&(cadenaEntrada.charAt(0)>opcionFinal)))
      {
      tecla='n';   
      }//fin si entrada vacia
     else
      {
      tecla=cadenaEntrada.charAt(0);   
      }
    teclado.close();
    return tecla;
    }//fin menuRepositorioAcreditado
  
  /**
   * Al tener la misma funcionalidad tanto el menu de autenticacion como el de alta,
   * solo se diferencia en la cabecera. Esta es la de autenticaci�n 
   */  
  private void cabeceraLogin()  
    {
    limpiarPantalla();
    System.out.println("        ALMCENAMIENTO EN LA NUBE");
    System.out.println("         LOGIN DE REPOSITORIO");
    for (int i=0;i<5;i++)
       {
       System.out.println(); 
       } 
    }//fin cabecera de login
  
  /**
   * Al tener la misma funcionalidad tanto el menu de autenticacion como el de alta,
   * solo se diferencia en la cabecera. Esta es la de registro 
   */  
  private void cabeceraRegistro()
    {
    limpiarPantalla();
    System.out.println("        ALMCENAMIENTO EN LA NUBE");
    System.out.println("            ALTA DE REPOSITORIO");
    for (int i=0;i<5;i++)
       {
       System.out.println(); 
       } 
    }//fin cabecera de registro
  
  /**
   * Visualiza mensaje de repositorio registrado correctamente
   * 
   */  
  public void altaRepositorioCorrecta()
    {
    //imprimimos la cabecera
    cabeceraRegistro();
    System.out.println("El Repositorio se ha registrado correctamente\n");
    pulsaIntro();
    }//fin altaRepositorioCorrecta
 
  /*
   * Visualiza mensaje de error en registro/autenticaci�n repositorio:
   * @param si tipoLogin=1, es el registro, si es =2 es autentificar
   */  
    
  public void errorAcreditacion(Character tipoLogin)
    {
    //si tipoLogin=1, es el registto  ,
    if (tipoLogin==ALTA_Repositorio)
      {
      //imprimimos la cabecera
      cabeceraRegistro();
      System.out.println("El Repositorio ya existe\n");
      }//fin si es tipo 1 registro
     else //sino es el login AUTENTIFICA_Repositorio
      {
      cabeceraLogin();
      System.out.println("Nombre y/o contrase�a erroneos\n");
      }//fin si no es tipo 1 (tipo 2)
    pulsaIntro();
    
    }//fin errorAcreditacion
    
   /**
    *  Visualiza la obtenci�n de nombre de repositorio y contrase�a
    *  no se permiten nombre de Repositorio en blanco;contrase�a s�.
    *  @param si tipoLogin=1, es el registro, si es =2 es autentificar
    */
  public AcreditacionRepositorio login(Character tipoLogin)  
    {
    AcreditacionRepositorio acreditacionRepositorio=new AcreditacionRepositorio();
    Scanner teclado=new Scanner(System.in);
    String cadenaEntrada="";//para capturar la entrada
    //si tipoLogin=1, es el registto  ,
    if (tipoLogin==ALTA_Repositorio)
      {
      //imprimimos la cabecera
      cabeceraRegistro();
      }//fin si es tipo 1 registro
     else //sino es el login es AUTENTIFICAR_Repositorio
      {
      cabeceraLogin();   
      }//fin si no es tipo 1 (tipo 2)
    do//hacer hasta que se introduzca algo por teclado(no intro)
      {
      System.out.print("Introduce el nombre de Repositorio : ");
      cadenaEntrada=teclado.nextLine();    
      //si es solo intro repite y sino sale al password
      if (cadenaEntrada.length()==0)
        {
        //repite pantalla
        //si tipoLogin=1, es el registro,
        if (tipoLogin==ALTA_Repositorio)
          {
          //imprimimos la cabecera
          cabeceraRegistro();
          }//fin si es tipo 1 registro
         else //si es AUTENTIFICA_Repositorio
          {
          cabeceraLogin();   
          }//fin si no es tipo 1 (tipo 2)
          
        }//fin si era solo intro
       else
        {
        acreditacionRepositorio.setNombre(cadenaEntrada); 
        }//fin sino esta vacía
      }//fin repetir hasta que Repositorio sea algo
    while(acreditacionRepositorio.getNombre().equals(""));
    //ahora capturamos la contrase�a. Vale la cadena vac�a
    System.out.print("Introduce la contrase�a : ");
    //la introducimos en el objeto de acreditaci�n
    acreditacionRepositorio.setPassword(obtenerPwd());
    teclado.close();
    return acreditacionRepositorio;
    }//fin pantalla login  
 
   public String obtenerIDCliente(String IDRepositorio)
     {
     Scanner teclado=new Scanner(System.in);
     String cadenaEntrada="";//para capturar la entrada
     limpiarPantalla();
     //cabecera
     System.out.println("--------------------------------------------------------------------------");
     System.out.println("       ALMACENAMIENTO EN LA NUBE. Repositorio : "+IDRepositorio);
     System.out.println("           Listado de ficheros del cliente ");
     System.out.println("");
          
      System.out.print("Introduce el nombre de Cliente de este repositorio : ");
      cadenaEntrada=teclado.nextLine();    
      //si es solo intro repite 
      
     //fin repetir hasta que Repositorio sea algo
     if (cadenaEntrada.length()==0) cadenaEntrada="";  
     teclado.close();
    return cadenaEntrada;    
    }//fin obtenerIDCliente
 
   public void finDePrograma()
    {
    limpiarPantalla();
    System.out.println("fin Repositorio ");
                  
    }
     
    
   public void verListadoClientes(String IDRepo, String listado) 
     {
      limpiarPantalla();
     //cabecera
     System.out.println("--------------------------------------------------------------------------");
     System.out.println("       ALMACENAMIENTO EN LA NUBE. Listado de clientes en repositorio "+IDRepo);
     System.out.println("---------------------------------------------------------------------------");
     System.out.println("  nombre de cliente   ");
     //datos   
     System.out.println(listado);
     //pulsa tecla
     pulsaIntro();     
        
     }//fin verListadoClientes 
    
   public void verListadoFicherosCliente(String IDRepositorio, String IDCliente, String listado)
     {
     limpiarPantalla();
     //obtenemos el id del cliente por consola 
      
      
      //cabecera
     System.out.println("--------------------------------------------------------------------------");
     System.out.println("       ALMACENAMIENTO EN LA NUBE. Repositorio : "+IDRepositorio);
     System.out.println("           Listado de ficheros del cliente "+IDCliente);
     System.out.println("---------------------------------------------------------------------------");
     System.out.println("  nombre de fichero   ");
     //datos   
     System.out.println(listado);
     //pulsa tecla
     pulsaIntro();   
        
     }//fin verListadoFicheroscliente
     
     
   public void errorRegistroRMI() 
     {
      System.err.println("No encuentra registro RMI desde repositorio");  
     }//fin errorRegistroRMI   
     
    public void errorAccesoRemotoObjeto(String en) 
     {
     System.err.println("Error de acceso objeto remoto en "+en+"\n" );  
     }
     
   public void errorNoEncuentraObjRemoto(String er)
     {
      System.err.println("No se encuentra el objeto remoto : "+ er + "\n");   
     }
     
   public void errorGenerico(String en)
     {
     System.err.println("excepci�n gen�rica "+en+ "\n");   
     }  
    //no permite nombres de usuario en blanco
  
   private void limpiarPantalla()
     {
     for (int i=0;i<40;i++)
       {
       System.out.println(); 
       }
        
     }//fin limpiar consola
  
   private void pulsaIntro()
     {
     System.out.print("Pulsa intro  ");
     obtenerPwd();
             
     }//fin pulsa Intro  
    
   /**
    * 
    * introducir una contrase�a (entorno de programaci�n no tiene consola)
    * tambi�n sirve para pulsar una tecla cualquiera sin visualizac�n
    * 
    */  
     
     
   private String obtenerPwd()
     {
     Console terminal = System.console();
     String cadenaEntrada="";
        //si consola virtual, contrase�a en claro
        if (terminal==null )
          {
          Scanner teclado=new Scanner(System.in);    
          System.out.print("Fuera de consola.");
          cadenaEntrada=teclado.nextLine();
          //si no es intro, se actualiza la contrase�a
          if (cadenaEntrada.length()==0)
            {
            cadenaEntrada=""; //borrado por seguridad.
            }//fin si la cadena no vacia
          teclado.close();
          }//fin si terminal==0
         else
          {//tiene consola
          try
            {
            cadenaEntrada=new String(terminal.readPassword());
            }
           catch  (IOError io)
            {
            System.out.println("no se pudo capturar : "+io);
            }
          }//fin sino terminal
       
      //aqu� ciframos la contrase�a    
      
      return cadenaEntrada;  
     }//fin pulsa Intro    
     
     
     
}//fin clase GUIRepositorioTexto